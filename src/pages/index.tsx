/* eslint-disable @typescript-eslint/no-floating-promises */
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
import * as React from 'react';
import TextField from '@mui/material/TextField';
import Stack from '@mui/material/Stack';
import Head from "next/head";

import { api } from "~/utils/api";
import styles from "./index.module.css";
import { Button, Input } from "@mui/material";
import { type TPokemon } from "~/server/api/routers/pokemon";
import Swal from "sweetalert2";
import { FormEvent, useState } from "react";
import PokemonRow from "~/components/PokemonRow";
import { styled } from '@mui/material/styles';
import Box from '@mui/material/Box';
import Paper from '@mui/material/Paper';
import Grid from '@mui/material/Grid';
import PokedexTable from '~/components/PokedexTable';


export default function Home() {
  const [name, setName] = useState('');

  const handleSubmit = (e: FormEvent) => {
    e.preventDefault();
    setName(name);
    const newPokemon: TPokemon = {
      name: "Roaring Moon",
      types: ["dark", "dragon"],
      sprite: "https://assets.pokemon.com/assets/cms2/img/pokedex/detail/1005.png"
    }
    mutate(newPokemon)
  }

  const { mutate } = api.pokemon.createPokemon.useMutation({
    onSuccess: (data) => {
      // mutation succeeded 
      Swal.fire({
        position: "top-end",
        icon: "success",
        title: `${data.name} added successfully`,
        showConfirmButton: false,
        timer: 1500
      });
      console.log(data);
    },
    onError: (err) => {
      // mutation failed
      console.log(err);
    }
  })

  return (
    <>
      <Head>
        <title>Pokedex</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/pokedex-icon.jpg" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>Find Your Pokemon</h1>
        <Grid container justifyContent="center" spacing={2} paddingTop={8}>
          <Grid item xs={6} md={5}>
            <Stack spacing={2} sx={{ width: 300 }}>
              <h3>Find with single name</h3>
              <TextField
                type="text" name='name' onChange={(e) => setName(e.target.value)}
                label="Pokemon name" variant="filled" color='primary' fullWidth />
            </Stack>
            {name.length > 0 &&
              <PokemonRow name={name} />
            }
          </Grid>
          <Grid item xs={6} md={5}>
            <Stack spacing={2} sx={{ width: 300 }}>
              <h3>Find with name of arrays</h3>
              <PokedexTable />

            </Stack>

          </Grid>
        </Grid>



      </main>
    </>
  );
}